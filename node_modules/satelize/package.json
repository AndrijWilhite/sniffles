{
  "_args": [
    [
      {
        "raw": "satelize",
        "scope": null,
        "escapedName": "satelize",
        "name": "satelize",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/andrij/dev/sniffles"
    ]
  ],
  "_from": "satelize@latest",
  "_id": "satelize@0.2.0",
  "_inCache": true,
  "_location": "/satelize",
  "_nodeVersion": "0.12.2",
  "_npmUser": {
    "name": "darul75",
    "email": "darul75@gmail.com"
  },
  "_npmVersion": "2.7.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "satelize",
    "scope": null,
    "escapedName": "satelize",
    "name": "satelize",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/satelize/-/satelize-0.2.0.tgz",
  "_shasum": "f8c612db64c071e83b6e97f356dbe1927f02d897",
  "_shrinkwrap": null,
  "_spec": "satelize",
  "_where": "/Users/andrij/dev/sniffles",
  "author": {
    "name": "Julien Valéry",
    "email": "darul75@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/darul75/satelize/issues"
  },
  "dependencies": {
    "maxmind-db-reader": "^0.2.1"
  },
  "description": "Get location details (latitude, longitude...) from IP visitor, server side NodeJS module",
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.11.3",
    "mocha": "^2.3.4"
  },
  "directories": {},
  "dist": {
    "shasum": "f8c612db64c071e83b6e97f356dbe1927f02d897",
    "tarball": "https://registry.npmjs.org/satelize/-/satelize-0.2.0.tgz"
  },
  "engines": {
    "node": ">=0.8.x"
  },
  "gitHead": "4182d540c1e5e8066c7d20a4549bfd341d3af93a",
  "homepage": "https://github.com/darul75/satelize",
  "keywords": [
    "ip",
    "location",
    "geolocation",
    "address",
    "nodejs",
    "telize"
  ],
  "license": "MIT",
  "main": "./src/satelize",
  "maintainers": [
    {
      "name": "darul75",
      "email": "darul@gmail.com"
    }
  ],
  "name": "satelize",
  "optionalDependencies": {},
  "readme": "# Satelize [![NPM version](https://badge.fury.io/js/satelize.png)](http://badge.fury.io/js/satelize) [![Build Status](https://travis-ci.org/darul75/satelize.png?branch=master)](https://travis-ci.org/darul75/satelize)\r\n\r\n**Satelize** NodeJS module to retrieve user location information based on IP, combined with expressjs for instance make life easier to get some stuff as latitude/longitude of your visitor.\r\n\r\nInspired and using http://www.telize.com/ service. Free today.\r\n\r\nYou will find informations there too.\r\n\r\n## Why ?\r\n\r\nBecause ecchymose in the nose. I needed something but on server side.\r\n\r\nWith expressjs for instance, you can get your request IP, then just need to use this library that will make the call to get user location data.\r\n\r\nAnd it is done.\r\n\r\n## Demo\r\n\r\nhttp://darul-demo.herokuapp.com/satelize\r\n\r\n## Install\r\n\r\n~~~\r\nnpm install satelize\r\n~~~\r\n\r\n## Usage\r\n\r\n```javascript\r\nvar satelize = require('satelize');\r\n\r\n// Example retrieve IP from request\r\n// var ip = req.header('x-forwarded-for') || req.connection.remoteAddress;\r\n\r\n// then satelize call\r\n\r\nsatelize.satelize({ip:'46.19.37.108'}, function(err, payload) {\r\n  // if used with expressjs\r\n  // res.send(payload);\r\n  // res.json...\r\n});\r\n```\r\n\r\n## Return\r\n\r\n~~~ json\r\n{\r\n    \"ip\": \"46.19.37.108\",\r\n    \"continent_code\": \"EU\",\r\n    \"continent\": {\r\n      \"de\": \"Europa\",\r\n      \"en\": \"Europe\"\r\n    },\r\n    \"country_code\": \"NL\",\r\n    \"country\": {\r\n      \"de\": \"Niederlande\",\r\n      \"en\": \"Netherlands\"\r\n    },\r\n    \"latitude\": 52.5,\r\n    \"longitude\": 5.75,\r\n    \"timezone\":\"Europe/Amsterdam\"\r\n}\r\n~~~\r\n\r\nDetails\r\n\r\n- **ip** (Visitor IP address, or IP address specified as parameter)\r\n- **country_code** (Two-letter ISO 3166-1 alpha-2 country code)\r\n- **country** (Names of the country)\r\n- **continent** (Names of the continent)\r\n- **continent_code** (Two-letter continent code)\r\n- **latitude** (Latitude)\r\n- **longitude** (Longitude)\r\n- **timezone** (Time Zone)\r\n\r\n## Options\r\n\r\n- **ip** : IPV4 better.\r\n- **timeout** : default 1000ms\r\n\r\n## Release\r\n\r\n- 0.2.0: api not free anymore, use of DB instead\r\n- 0.1.2: fix timeout duplicate callback call\r\n\r\n## Metrics\r\n\r\n[![NPM](https://nodei.co/npm/satelize.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/satelize/)\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2013 Julien Valéry\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/darul75/satelize.git"
  },
  "scripts": {
    "test": "mocha test/*.js"
  },
  "version": "0.2.0"
}
